---
import { Header, Footer } from '@components';
import { Layout } from '@layouts';
import { useTranslations, type Locale, getLocalizedPath } from '@utils/i18n';

// Define static paths for both languages
export async function getStaticPaths() {
  return [
    { params: { lang: 'es' } }, // /es/404
    { params: { lang: 'en' } }, // /en/404
  ];
}

// Get the language from params
const { lang } = Astro.params;
const locale = (lang as Locale) || 'es';
const t = useTranslations(locale);
const hasNavLinks = false;

// Generar URLs localizadas correctamente
const homeUrl = getLocalizedPath('/', locale);
const contactUrl = getLocalizedPath('/contact', locale);
const projectsUrl = getLocalizedPath('/projects', locale);

// Contenido traducido desde el sistema centralizado
const pageContent = {
  title: t<string>('error404.title'),
  description: t<string>('error404.description'),
  heading: t<string>('error404.heading'),
  subheading: t<string>('error404.subheading'),
  message: t<string>('error404.message'),
  suggestion: t<string>('error404.suggestion'),
  homeButton: t<string>('error404.homeButton'),
  contactButton: t<string>('error404.contactButton'),
};

// Enlaces de navegación sugeridos
const suggestedLinks = [
  {
    label: t<string>('nav.home'),
    url: homeUrl,
    icon: '🏠',
  },
  {
    label: t<string>('nav.projects'),
    url: projectsUrl,
    icon: '💼',
  },
  {
    label: t<string>('nav.contact'),
    url: contactUrl,
    icon: '📧',
  },
];
---

<Layout
  title={pageContent.title}
  description={pageContent.description}
  locale={locale}
>
  <Header hasNavLinks={hasNavLinks} locale={locale} />

  <main class="error-page">
    <div class="container">
      <div class="error-content">
        <!-- Número de error animado -->
        <div class="error-number" aria-label={pageContent.heading}>
          <span class="digit">4</span>
          <span class="digit zero">0</span>
          <span class="digit">4</span>
        </div>

        <!-- Título y mensaje -->
        <h1 class="error-title">{pageContent.subheading}</h1>
        <p class="error-description">{pageContent.message}</p>

        <!-- Botones de acción principales -->
        <div class="error-actions">
          <a
            href={homeUrl}
            class="btn btn-primary"
            aria-label={pageContent.homeButton}
          >
            {pageContent.homeButton}
          </a>
          <a
            href={contactUrl}
            class="btn btn-outline"
            aria-label={pageContent.contactButton}
          >
            {pageContent.contactButton}
          </a>
        </div>

        <!-- Sugerencias de navegación -->
        <div class="suggested-links">
          <p class="suggested-text">{pageContent.suggestion}</p>
          <nav class="quick-links" aria-label="Quick navigation">
            {
              suggestedLinks.map((link) => (
                <a href={link.url} class="quick-link" aria-label={link.label}>
                  <span class="link-icon" aria-hidden="true">
                    {link.icon}
                  </span>
                  <span class="link-label">{link.label}</span>
                </a>
              ))
            }
          </nav>
        </div>
      </div>
    </div>
  </main>

  <Footer hasNavLinks={hasNavLinks} locale={locale} pageType="404" />
</Layout>

<style>
  .error-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 6rem 0 4rem;
    position: relative;
    overflow: hidden;
  }

  /* Efecto de fondo sutil */
  .error-page::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 600px;
    height: 600px;
    background: radial-gradient(
      circle,
      rgba(0, 212, 255, 0.05) 0%,
      transparent 70%
    );
    pointer-events: none;
    animation: pulse 4s ease-in-out infinite;
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 0.5;
      transform: translate(-50%, -50%) scale(1);
    }
    50% {
      opacity: 0.8;
      transform: translate(-50%, -50%) scale(1.1);
    }
  }

  .container {
    position: relative;
    z-index: 1;
  }

  .error-content {
    text-align: center;
    max-width: 700px;
    margin: 0 auto;
  }

  /* Número 404 grande y animado */
  .error-number {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 2rem;
    perspective: 1000px;
  }

  .digit {
    font-size: 8rem;
    font-weight: 900;
    color: var(--primary-color);
    text-shadow: 0 0 40px rgba(0, 212, 255, 0.4);
    line-height: 1;
    animation: fadeInUp 0.6s ease-out backwards;
    display: inline-block;
  }

  .digit:nth-child(1) {
    animation-delay: 0.1s;
  }

  .digit.zero {
    animation:
      fadeInUp 0.6s ease-out 0.2s backwards,
      rotate 3s ease-in-out 0.8s infinite;
    transform-style: preserve-3d;
  }

  .digit:nth-child(3) {
    animation-delay: 0.3s;
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes rotate {
    0%,
    100% {
      transform: rotateY(0deg);
    }
    50% {
      transform: rotateY(360deg);
    }
  }

  /* Título y descripción */
  .error-title {
    font-size: 2.5rem;
    color: var(--text-primary);
    margin: 1.5rem 0 1rem;
    font-weight: 700;
    animation: fadeIn 0.8s ease-out 0.4s backwards;
  }

  .error-description {
    font-size: 1.2rem;
    color: var(--text-secondary);
    margin: 1rem 0 2.5rem;
    line-height: 1.6;
    animation: fadeIn 0.8s ease-out 0.6s backwards;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }

  /* Botones de acción */
  .error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin: 2.5rem 0;
    animation: fadeIn 0.8s ease-out 0.8s backwards;
  }

  .btn {
    padding: 0.875rem 2rem;
    border-radius: var(--border-radius);
    font-weight: 600;
    font-size: 1rem;
    transition: var(--transition);
    cursor: pointer;
    border: 2px solid transparent;
    text-decoration: none;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    min-width: 160px;
  }

  .btn-primary {
    background: var(--gradient-primary);
    color: var(--secondary-color);
    box-shadow: 0 4px 15px rgba(0, 212, 255, 0.3);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 212, 255, 0.4);
  }

  .btn-outline {
    background: transparent;
    color: var(--primary-color);
    border-color: var(--primary-color);
  }

  .btn-outline:hover {
    background: rgba(0, 212, 255, 0.1);
    transform: translateY(-2px);
  }

  /* Enlaces sugeridos */
  .suggested-links {
    margin-top: 4rem;
    padding-top: 3rem;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
    animation: fadeIn 0.8s ease-out 1s backwards;
  }

  .suggested-text {
    font-size: 1rem;
    color: var(--text-muted);
    margin-bottom: 1.5rem;
  }

  .quick-links {
    display: flex;
    gap: 1rem;
    justify-content: center;
    flex-wrap: wrap;
  }

  .quick-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: var(--background-card);
    border: 1px solid rgba(0, 212, 255, 0.2);
    border-radius: var(--border-radius);
    color: var(--text-secondary);
    text-decoration: none;
    transition: var(--transition);
    font-size: 0.95rem;
  }

  .quick-link:hover {
    background: rgba(0, 212, 255, 0.05);
    border-color: var(--primary-color);
    color: var(--primary-color);
    transform: translateY(-2px);
  }

  .link-icon {
    font-size: 1.2rem;
    line-height: 1;
  }

  .link-label {
    font-weight: 500;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .error-page {
      padding: 4rem 0 3rem;
    }

    .digit {
      font-size: 5rem;
    }

    .error-title {
      font-size: 2rem;
    }

    .error-description {
      font-size: 1.05rem;
    }

    .error-actions {
      flex-direction: column;
      align-items: stretch;
      gap: 0.75rem;
    }

    .btn {
      width: 100%;
    }

    .quick-links {
      flex-direction: column;
      align-items: stretch;
    }

    .quick-link {
      justify-content: center;
    }

    .suggested-links {
      margin-top: 3rem;
      padding-top: 2rem;
    }
  }

  @media (max-width: 480px) {
    .digit {
      font-size: 4rem;
      gap: 0.25rem;
    }

    .error-number {
      gap: 0.25rem;
    }
  }

  /* Mejoras de accesibilidad */
  @media (prefers-reduced-motion: reduce) {
    .digit,
    .error-title,
    .error-description,
    .error-actions,
    .suggested-links {
      animation: none;
    }

    .error-page::before {
      animation: none;
    }

    .btn:hover,
    .quick-link:hover {
      transform: none;
    }
  }

  /* Modo de alto contraste */
  @media (prefers-contrast: high) {
    .digit {
      text-shadow: none;
    }

    .btn-primary {
      box-shadow: none;
      border: 2px solid var(--primary-color);
    }

    .quick-link {
      border-width: 2px;
    }
  }
</style>
