---
import { SkillCard } from '@components';
import { useTranslations, type Locale } from '../utils/i18n';
import { getAllSkills } from '../utils/skillsManager';

// Recibir locale como prop en lugar de detectarlo
interface Props {
  locale?: Locale;
}

const { locale = 'es' } = Astro.props;
const t = useTranslations(locale);

// Obtener skills desde Content Collections
const skills = await getAllSkills();

// Para el carrusel, triplicar las skills para efecto infinito
const skillsForCarousel = [...skills, ...skills, ...skills];
---

<section id="skills" class="skills">
  <div class="container">
    <h2 class="section-title skills-title">{t('skills.title')}</h2>
    <div class="skills-carousel">
      <div class="skills-track">
        {
          skillsForCarousel.map((skill) => (
            <SkillCard name={skill.name} icon={skill.iconUrl} url={skill.url} />
          ))
        }
      </div>
      <div class="indicator-text">{t('skills.indicatorText')}</div>
    </div>
  </div>
</section>

<style>
  .skills-title {
    font-size: clamp(2.5rem, 5vw, 3.5rem);
    background: var(--gradient-primary);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    margin-bottom: 4rem;
    text-align: center;
    font-weight: 700;
    letter-spacing: -0.02em;
  }

  .indicator-text {
    text-align: center;
    color: var(--text-muted);
    font-size: 0.9rem;
    margin-top: 1rem;
    opacity: 0.7;
    transition: opacity 0.5s ease;
  }

  @media (max-width: 768px) {
    .indicator-text {
      font-size: 0.8rem;
      margin-top: 0.5rem;
    }
  }
</style>

<script>
  import { SkillsCarousel } from '../scripts/skillsCarousel.js';

  // Initialize skills carousel when component loads
  new SkillsCarousel();
</script>
