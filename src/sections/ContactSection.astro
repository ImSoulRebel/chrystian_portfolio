---
import {
  PUBLIC_CONTACT_EMAIL,
  PUBLIC_CONTACT_PHONE,
  PUBLIC_GITHUB_USERNAME,
  PUBLIC_LINKEDIN_URL,
} from 'astro:env/client';
import { Icon, ContactForm } from '@components';
import { useTranslations, type Locale } from '@utils/i18n';

// Recibir locale como prop en lugar de detectarlo
interface Props {
  locale?: Locale;
}

const { locale = 'es' } = Astro.props;
const t = useTranslations(locale);
const contactEmail = PUBLIC_CONTACT_EMAIL;
const contactPhone = PUBLIC_CONTACT_PHONE;
const githubUsername = PUBLIC_GITHUB_USERNAME;
const linkedinUrl = PUBLIC_LINKEDIN_URL;
---

<section id="contact" class="contact">
  <div class="container">
    <div class="contact-wrapper">
      <!-- Hero Section -->
      <div class="contact-hero">
        <h2 class="section-title">{t('contact.title')}</h2>
        <p class="hero-description">{t('contact.description')}</p>
      </div>

      <!-- Main Layout: Info + Form -->
      <div class="contact-layout">
        <!-- Left: Info Section -->
        <div class="contact-info-section">
          <!-- Subtitle -->
          <div class="form-intro">
            <h3 class="form-intro-title">{t('contact.form.title')}</h3>
            <p class="form-intro-text">{t('contact.form.text')}</p>
          </div>

          <!-- Expectations Cards -->
          <div class="expectations-grid">
            <div class="expectation-card">
              <div class="expectation-icon">‚ö°</div>
              <h4 class="expectation-title">
                {t('contact.expectation.quickResponse.title')}
              </h4>
              <p class="expectation-text">
                {t('contact.expectation.quickResponse.text')}
              </p>
            </div>

            <div class="expectation-card">
              <div class="expectation-icon">ü§ù</div>
              <h4 class="expectation-title"></h4>
              {t('contact.expectation.collaborationOpportunity.title')}
              <p class="expectation-text">
                {t('contact.expectation.collaborationOpportunity.text')}
              </p>
            </div>

            <div class="expectation-card">
              <div class="expectation-icon">üìä</div>
              <h4 class="expectation-title">
                {t('contact.expectation.actionPlan.title')}
              </h4>
              <p class="expectation-text">
                {t('contact.expectation.actionPlan.text')}
              </p>
            </div>
          </div>

          <!-- Tip Section -->
          <div class="tip-section">
            <div class="tip-header">
              <span class="tip-icon">üí°</span>
              <span class="tip-label">{t('contact.tipSection.title')}</span>
            </div>
            <p class="tip-text">{t('contact.tipSection.description')}</p>
          </div>
        </div>

        <!-- Right: Form -->
        <div class="contact-form-section">
          <ContactForm locale={locale} />
        </div>
      </div>

      <!-- Contact Quick Links -->
      <div class="contact-quick-links">
        <p class="quick-links-label">{t('contact.quickLinks.label')}</p>
        <div class="quick-links-grid">
          <a href={`mailto:${contactEmail}`} class="quick-link">
            <Icon name="email" size={20} color="var(--primary-color)" />
            <span>{t('contact.quickLinks.email')}</span>
          </a>
          <a href={`tel:${contactPhone}`} class="quick-link">
            <Icon name="phone" size={20} color="var(--primary-color)" />
            <span>{t('contact.quickLinks.phone')}</span>
          </a>
          <a
            href={linkedinUrl}
            target="_blank"
            rel="noopener"
            class="quick-link"
          >
            <Icon name="linkedin" size={20} color="var(--primary-color)" />
            <span>{t('contact.quickLinks.linkedin')}</span>
          </a>
          <a
            href={`https://github.com/${githubUsername}`}
            target="_blank"
            rel="noopener"
            class="quick-link"
          >
            <Icon name="github" size={20} color="var(--primary-color)" />
            <span>{t('contact.quickLinks.github')}</span>
          </a>
        </div>
      </div>
    </div>
  </div>

  <style>
    .contact {
      position: relative;
      background: var(--background-dark);
    }

    .contact-wrapper {
      display: flex;
      flex-direction: column;
      gap: 4rem;
    }

    /* Hero Section */
    .contact-hero {
      text-align: center;
      max-width: 700px;
      margin: 0 auto;
    }

    .contact-hero .section-title {
      margin-bottom: 1.5rem;
    }

    .contact-hero .hero-description {
      font-size: 1.1rem;
      color: var(--text-secondary);
      line-height: 1.6;
    }

    /* Main Layout */
    .contact-layout {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 4rem;
      align-items: start;
    }

    /* Info Section */
    .contact-info-section {
      display: flex;
      flex-direction: column;
      gap: 2.5rem;
    }

    .form-intro {
      margin-bottom: 0.5rem;
    }

    .form-intro-title {
      font-size: 1.3rem;
      color: var(--text-primary);
      margin-bottom: 0.75rem;
      font-weight: 600;
    }

    .form-intro-text {
      color: var(--text-secondary);
      font-size: 1rem;
      line-height: 1.6;
      margin: 0;
    }

    /* Expectations Grid */
    .expectations-grid {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .expectation-card {
      padding: 1.5rem;
      background: linear-gradient(
        135deg,
        rgba(0, 212, 255, 0.05),
        rgba(22, 33, 62, 0.3)
      );
      border: 1px solid rgba(0, 212, 255, 0.1);
      border-radius: 12px;
      transition: var(--transition);
      position: relative;
      overflow: hidden;
    }

    .expectation-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 1px;
      background: linear-gradient(
        90deg,
        transparent,
        rgba(0, 212, 255, 0.3),
        transparent
      );
    }

    .expectation-card:hover {
      border-color: rgba(0, 212, 255, 0.2);
      background: linear-gradient(
        135deg,
        rgba(0, 212, 255, 0.08),
        rgba(22, 33, 62, 0.4)
      );
      transform: translateX(4px);
    }

    .expectation-icon {
      font-size: 1.8rem;
      margin-bottom: 0.75rem;
      display: block;
    }

    .expectation-title {
      font-size: 1rem;
      font-weight: 600;
      color: var(--text-primary);
      margin-bottom: 0.5rem;
    }

    .expectation-text {
      color: var(--text-muted);
      font-size: 0.9rem;
      line-height: 1.5;
      margin: 0;
    }

    /* Tip Section */
    .tip-section {
      padding: 1rem;
      background: linear-gradient(
        135deg,
        rgba(255, 217, 61, 0.08),
        rgba(255, 217, 61, 0.04)
      );
      border: 1px solid rgba(255, 217, 61, 0.2);
      border-radius: 12px;
      margin-top: 0.5rem;
    }

    .tip-header {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      margin-bottom: 0.75rem;
    }

    .tip-icon {
      font-size: 1.4rem;
    }

    .tip-label {
      font-size: 0.85rem;
      font-weight: 600;
      color: var(--primary-color);
      text-transform: uppercase;
      letter-spacing: 0.5px;
    }

    .tip-text {
      color: var(--text-secondary);
      font-size: 0.95rem;
      line-height: 1.5;
      margin: 0;
    }

    /* Form Section */
    .contact-form-section {
      background: linear-gradient(
        135deg,
        rgba(26, 26, 46, 0.5),
        rgba(22, 33, 62, 0.5)
      );
      border: 1px solid rgba(0, 212, 255, 0.1);
      border-radius: 16px;
      padding: 2rem;
      backdrop-filter: blur(10px);
    }

    /* Quick Links */
    .contact-quick-links {
      text-align: center;
      padding: 2rem;
      border-top: 1px solid rgba(0, 212, 255, 0.1);
      margin-top: 2rem;
    }

    .quick-links-label {
      color: var(--text-secondary);
      font-size: 0.95rem;
      margin-bottom: 1.5rem;
    }

    .quick-links-grid {
      display: flex;
      justify-content: center;
      gap: 1.5rem;
      flex-wrap: wrap;
    }

    .quick-link {
      display: flex;
      align-items: center;
      gap: 0.6rem;
      padding: 0.75rem 1.25rem;
      background: rgba(0, 212, 255, 0.05);
      border: 1px solid rgba(0, 212, 255, 0.15);
      border-radius: 8px;
      color: var(--text-secondary);
      text-decoration: none;
      font-size: 0.9rem;
      font-weight: 500;
      transition: var(--transition);
    }

    .quick-link:hover {
      background: rgba(0, 212, 255, 0.1);
      border-color: rgba(0, 212, 255, 0.3);
      color: var(--primary-color);
      transform: translateY(-2px);
    }

    /* Responsive Design */
    @media (max-width: 1024px) {
      .contact-layout {
        grid-template-columns: 1fr;
        gap: 3rem;
      }

      .contact-form-section {
        padding: 1.75rem;
      }
    }

    @media (max-width: 768px) {
      .contact-wrapper {
        gap: 3rem;
      }

      .contact-layout {
        gap: 2rem;
      }

      .contact-info-section {
        gap: 2rem;
      }

      .expectations-grid {
        gap: 1rem;
      }

      .expectation-card {
        padding: 1.25rem;
      }

      .contact-form-section {
        padding: 1.5rem;
      }

      .quick-links-grid {
        gap: 1rem;
      }

      .quick-link {
        flex: 1 1 calc(50% - 0.5rem);
        min-width: 150px;
        justify-content: center;
      }
    }

    @media (max-width: 600px) {
      .contact-wrapper {
        gap: 2rem;
      }

      .form-intro-title {
        font-size: 1.1rem;
      }

      .expectation-card {
        padding: 1rem;
      }

      .tip-section {
        padding: 1rem;
      }

      .contact-form-section {
        padding: 1.25rem;
      }

      .quick-link {
        flex: 1 1 calc(50% - 0.5rem);
        gap: 0.4rem;
        padding: 0.6rem 0.75rem;
        font-size: 0.8rem;
      }

      .quick-links-grid {
        gap: 0.75rem;
      }
    }
  </style>
</section>
