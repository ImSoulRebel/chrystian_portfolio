---
import { ExperienceItem } from '@components';
import { translations } from '@config/translations';
import { useTranslations, type Locale } from '@utils/i18n';

// Recibir locale como prop en lugar de detectarlo
interface Props {
  locale?: Locale;
}

const { locale = 'es' } = Astro.props;
const t = useTranslations(locale);

// Configuración de experiencias
const experiencesConfig = [
  { key: 'yuvod' as const },
  { key: 'nextival' as const },
  { key: 'optimus' as const },
  { key: 'retail' as const },
];

// Construir experiencias desde traducciones + configuración
const experiences = experiencesConfig.map((config) => {
  const expData = translations[locale].experience.list[config.key];
  return {
    title: expData.title,
    company: expData.company,
    period: expData.period,
    location: expData.location,
    description: expData.description,
    skills: expData.skills,
  };
});
---

<section id="experience" class="experience">
  <div class="container">
    <h2 class="section-title">{t('experience.title')}</h2>
    <div class="experience-timeline">
      {
        experiences.map((exp) => (
          <ExperienceItem
            title={exp.title}
            company={exp.company}
            period={exp.period}
            location={exp.location}
            description={exp.description}
            skills={exp.skills}
          />
        ))
      }
    </div>
  </div>
</section>
